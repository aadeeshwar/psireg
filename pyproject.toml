[tool.poetry]
name = "psireg"
version = "0.1.0"
description = "Predictive Swarm Intelligence for Renewable Energy Grids"
authors = ["Aadeeshwar Pathak <aadeeshwar.pathak@gmail.com>"]
readme = "README.md"
packages = [{include = "psireg", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
pydantic = "^2.9.0"
pyyaml = "^6.0.2"
pandas = "^2.3.0"
plotly = "^6.2.0"
numpy = "^2.3.1"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
ruff = "^0.4.4"
mypy = "^1.10.0"
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.6.0"
sphinx = "^7.3.0"
sphinx-rtd-theme = "^2.0.0"
types-pyyaml = "^6.0.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.black]
line-length = 120
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "acceptance: marks tests as acceptance tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src/psireg"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"
